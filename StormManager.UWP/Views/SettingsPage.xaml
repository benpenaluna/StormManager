<Page x:Class="StormManager.UWP.Views.SettingsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:controls="using:StormManager.UWP.Controls"
      xmlns:converter="using:StormManager.UWP.Converters"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:vm="using:StormManager.UWP.ViewModels.SettingPageViewModel"
      xmlns:data="using:StormManager.UWP.Models"
      xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
      xmlns:core="using:Microsoft.Xaml.Interactions.Core"
      xmlns:behaviors="using:StormManager.UWP.Behaviors"
      mc:Ignorable="d">

    <Page.DataContext>
        <vm:SettingsPageViewModel x:Name="ViewModel" />
    </Page.DataContext>

    <Page.Resources>
        <converter:ValueWhenConverter x:Name="FalseWhenTrueConverter">
            <converter:ValueWhenConverter.When>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.When>
            <converter:ValueWhenConverter.Value>
                <x:Boolean>False</x:Boolean>
            </converter:ValueWhenConverter.Value>
            <converter:ValueWhenConverter.Otherwise>
                <x:Boolean>True</x:Boolean>
            </converter:ValueWhenConverter.Otherwise>
        </converter:ValueWhenConverter>
        
        <!--<Flyout x:Key="myColorPickerFlyOut">
            <RelativePanel>
                <ColorPicker x:Name="myColorPicker"
                             IsColorChannelTextInputVisible="False"
                             IsHexInputVisible="False"/>

                <Grid RelativePanel.Below="myColorPicker"
                      RelativePanel.AlignLeftWithPanel="True"
                      RelativePanel.AlignRightWithPanel="True">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Button Content="OK" Click="confirmColor_Click"
                            Margin="0,12,2,0" HorizontalAlignment="Stretch"/>
                    <Button Content="Cancel" Click="cancelColor_Click"
                            Margin="2,12,0,0" HorizontalAlignment="Stretch"
                            Grid.Column="1"/>
                </Grid>
            </RelativePanel>
        </Flyout>-->

    </Page.Resources>

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for narrow view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for normal view  -->
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <!--  TODO: change properties for wide view  -->
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <!--  header  -->
        <controls:PageHeader x:Name="PageHeader"
                             Content="Settings Page"
                             Frame="{x:Bind Frame}"
                             RelativePanel.AlignLeftWithPanel="True"
                             RelativePanel.AlignRightWithPanel="True"
                             RelativePanel.AlignTopWithPanel="True" />

        <!--  content  -->
        <Pivot x:Name="MyPivot"
               EntranceNavigationTransitionInfo.IsTargetElement="True"
               RelativePanel.AlignBottomWithPanel="True"
               RelativePanel.AlignLeftWithPanel="True"
               RelativePanel.AlignRightWithPanel="True"
               RelativePanel.Below="PageHeader">

            <!--  settings  -->
            <PivotItem DataContext="{Binding SettingsPartViewModel}" Header="Settings">
                <ScrollViewer Margin="0,12,-12,0"
                              HorizontalContentAlignment="Left"
                              VerticalScrollBarVisibility="Auto">
                    <RelativePanel HorizontalAlignment="Left">

                        <ToggleSwitch x:Name="UseShellDrawnBackButtonToggleSwtich"
                                      Header="Shell-drawn Back Button"
                                      IsOn="{Binding UseShellBackButton, Mode=TwoWay}"
                                      OffContent="Back button is in Page Header"
                                      OnContent="Back button in Title/TaskBar"
                                      RelativePanel.AlignLeftWithPanel="True"
                                      RelativePanel.AlignTopWithPanel="True" />

                        <ToggleSwitch x:Name="UseLightThemeToggleSwitch"
                                      Header="Requested Application Theme"
                                      IsOn="{Binding UseLightThemeButton, Mode=TwoWay}"
                                      OffContent="Current theme is Dark"
                                      OnContent="Current theme is Light"
                                      RelativePanel.AlignLeftWithPanel="True"
                                      RelativePanel.Below="UseShellDrawnBackButtonToggleSwtich" />

                        <ToggleSwitch x:Name="ShowHamburgerButtonToggleSwitch"
                                      Header="Hamburger Button Visibility"
                                      IsEnabled="{Binding IsOn, ElementName=IsFullScreenToggleSwitch, Converter={StaticResource FalseWhenTrueConverter}}"
                                      IsOn="{Binding ShowHamburgerButton, Mode=TwoWay}"
                                      OffContent="Hamburger Button is hidden"
                                      OnContent="Hamburger Button is visible"
                                      RelativePanel.AlignLeftWithPanel="True"
                                      RelativePanel.Below="UseLightThemeToggleSwitch" />

                        <ToggleSwitch x:Name="IsFullScreenToggleSwitch"
                                      Header="Page content is Full Screen"
                                      IsOn="{Binding IsFullScreen, Mode=TwoWay}"
                                      OffContent="Hamburger Menu is visible"
                                      OnContent="Hamburger Menu is hidden"
                                      RelativePanel.AlignLeftWithPanel="True"
                                      RelativePanel.Below="ShowHamburgerButtonToggleSwitch" />

                        <TextBox x:Name="BusyTextTextBox"
                                 Width="200"
                                 Margin="0,12,0,0"
                                 HorizontalAlignment="Left"
                                 Header="Busy text"
                                 RelativePanel.AlignLeftWithPanel="True"
                                 RelativePanel.Below="IsFullScreenToggleSwitch"
                                 Text="{Binding BusyText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                        <Button Margin="12,0,0,0"
                                Command="{x:Bind ViewModel.SettingsPartViewModel.ShowBusyCommand}"
                                Content="Show Busy"
                                RelativePanel.AlignBottomWith="BusyTextTextBox"
                                RelativePanel.RightOf="BusyTextTextBox" />

                    </RelativePanel>

                </ScrollViewer>
            </PivotItem>

            <!--  Job Types  -->
            <PivotItem DataContext="{Binding JobTypesPartViewModel}"
                       Padding="0">
                <PivotItem.Header>
                    <TextBlock x:Uid="JobTypesPivotItem" />
                </PivotItem.Header>
                <ScrollViewer Margin="0,0,-12,0" VerticalScrollBarVisibility="Auto">
                    <GridView x:Name="JobTypesGridView"
                              ItemsSource="{x:Bind ViewModel.JobTypesPartViewModel.JobTypes}">
                        <GridView.ItemTemplate>
                            <DataTemplate x:Name="JobTypesDatTemplate" x:DataType="data:JobType">
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel Margin="10" Width="300">
                                        <StackPanel.Background>
                                            <LinearGradientBrush StartPoint="0 0" EndPoint="1 0">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStopCollection>
                                                        <GradientStop Offset="0" Color="{Binding Color, ElementName=ColorPickerButton, Mode=OneWay}"/>
                                                        <GradientStop Offset="1" Color="{x:Bind AgingJobColorWindowUi}"/>
                                                    </GradientStopCollection>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </StackPanel.Background>
                                        <TextBlock Text="{x:Bind Category}" FontSize="16" Margin="10,10,10,0" TextAlignment="Left" />
                                        <TextBlock Text="{x:Bind SubCategory}" FontSize="12" Margin="10,10,10,10" TextAlignment="Left" />
                                    </StackPanel>
                                    <StackPanel Margin="10" Width ="100">
                                        <!--<Button x:Name="ColorPickerButton"
                                                Content="New Job"
                                                FontSize="12" >
                                                --><!--Flyout="{StaticResource myColorPickerFlyOut}"/>--><!--
                                            <FlyoutBase.AttachedFlyout>
                                                <Flyout x:Name="ColorPickerButtonFlyout">
                                                    <RelativePanel>
                                                        <ColorPicker x:Name="NewJobColorPicker"
                                                                     Color="{x:Bind NewJobColorWindowUi, Mode=TwoWay}"
                                                                     IsColorChannelTextInputVisible="False"
                                                                     IsHexInputVisible="False"/>
                                                        <Grid RelativePanel.Below="NewJobColorPicker"
                                                              RelativePanel.AlignLeftWithPanel="True"
                                                              RelativePanel.AlignRightWithPanel="True">
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <Button Content="OK" 
                                                                    Click="confirmColor_Click"
                                                                    Margin="0,12,2,0" 
                                                                    HorizontalAlignment="Stretch"/>
                                                            <Button Content="Cancel" 
                                                                    Click="cancelColor_Click"
                                                                    Margin="2,12,0,0" 
                                                                    HorizontalAlignment="Stretch"
                                                                    Grid.Column="1"/>
                                                        </Grid>
                                                    </RelativePanel>
                                                </Flyout>
                                            </FlyoutBase.AttachedFlyout>
                                            <interactivity:Interaction.Behaviors>
                                                <core:EventTriggerBehavior EventName="Tapped">
                                                    <behaviors:OpenFlyoutAction />
                                                </core:EventTriggerBehavior>
                                            </interactivity:Interaction.Behaviors>
                                        </Button>-->
                                        <controls:ColorPickerButton x:Name="ColorPickerButton"
                                                                    Content="New Job" 
                                                                    Color="{x:Bind NewJobColorWindowUi, Mode=TwoWay}"
                                                                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                                    </StackPanel>
                                </StackPanel>
                            </DataTemplate>
                        </GridView.ItemTemplate>
                    </GridView>
                </ScrollViewer>
            </PivotItem>

            <!--  about  -->
            <PivotItem Header="About">
                <RelativePanel DataContext="{Binding AboutPartViewModel}">
                    <Border x:Name="LogoImage"
                            HorizontalAlignment="Right"
                            VerticalAlignment="Top"
                            BorderBrush="DimGray"
                            BorderThickness="1"
                            IsHitTestVisible="False"
                            RelativePanel.AlignRightWithPanel="True"
                            RelativePanel.AlignTopWithPanel="True">
                        <Border.Background>
                            <SolidColorBrush Color="{ThemeResource SystemAccentColor}" />
                        </Border.Background>
                        <Image Margin="12"
                               Source="{Binding Logo}"
                               Stretch="None" />
                    </Border>

                    <TextBlock x:Name="DisplayNameTextBlock"
                               Margin="0,0,0,12"
                               FontSize="24"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.AlignRightWith="LogoImage"
                               RelativePanel.AlignTopWithPanel="True"
                               Text="{Binding DisplayName}" />

                    <TextBlock x:Name="PublisherTextBlock"
                               RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="DisplayNameTextBlock"
                               Text="{Binding Publisher}" />

                    <TextBlock RelativePanel.AlignLeftWithPanel="True"
                               RelativePanel.Below="PublisherTextBlock">
                        <Run>Version</Run>
                        <Run Text="{Binding Version}" />
                    </TextBlock>

                </RelativePanel>
            </PivotItem>
        </Pivot>

    </RelativePanel>

</Page>

